use crate::{components, events::Events, World};
use itertools::izip;

pub(crate) fn decrement_damage_invulnerability_timer<const ENTITY_COUNT: usize>(
    world: &mut World<ENTITY_COUNT>,
) -> Events {
    for (entity, damage_invulnerability_timer) in izip!(
        world.entities.iter_mut(),
        world.components.damage_invulnerability_timers.iter_mut()
    ) {
        if entity.has_damage_invulnerability_timer() {
            *damage_invulnerability_timer = damage_invulnerability_timer.saturating_sub(1);
            if *damage_invulnerability_timer == 0 {
                entity.remove_damage_invulnerability_timer();
            }
        }
    }

    Events::default()
}
